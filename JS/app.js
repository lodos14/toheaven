
// console.log(값)  콘솔창에 출력

// 1. 변수 

// 변수를 만드는 방법은 두가지 const, let 예를들어 변수를 업데이트 할꺼면 let 고정변수면 const
// let a = 5 ;
// const b = 1 ;
// const veryLongVariableName = "nico";

// console.log(a + b);
// console.log(a * b);
// console.log(a / b);
// console.log("hello " + veryLongVariableName);
// a = 3;
// b = 2;  // 이건 안됨  
// console.log(a);

//----------------------------------------------------------------------------

// 2. bool, undefind, null

// const amIFat_1 = true;
// const amIFat_2 = null;
// let amIFat_3;

// console.log(amIFat_1);
// console.log(amIFat_2);
// console.log(amIFat_3);

//----------------------------------------------------------------------------

// 3. Array

// const daysOfWeek = ["mon", "tue", "wed", "thu", "fri", "sat"];
// const nonsense = [1, 2, "hello", false, null, true, undefined, "nico"];

// console.log(daysOfWeek, nonsense);
// console.log(daysOfWeek[5]);

// // 배열 추가하기
// daysOfWeek.push("sun");

// console.log(daysOfWeek)

//----------------------------------------------------------------------------
// 4. object

// const player = {   

//     name: "nico",   // JS에선 객체안에 = 대신 :  파이썬의 딕셔너리 
//     points: 10,
//     fat: true,

// };

// console.log(player)
// console.log(player.name, player.points, player.fat)
// console.log(player["name"], player["points"], player["fat"])

// player.fat = false;   // const여도 객체는 동일하므로 그 안의 내용은 수정 가능
// console.log(player)
// //player = 123;         // 이런게 안됨

// player.lastName = "potato";
// console.log(player)

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
